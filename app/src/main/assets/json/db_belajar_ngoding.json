{
  "contents": [
    {
      "id_content": 0,
      "pages": [
        {
          "parts_page": [
            {
              "content": "SuVMobAoToc",
              "type": "youtube"
            },
            {
              "content": "# Pendahuluan Pemrograman Web Front End\n\n ## Apa itu Web?\n\n**Web** adalah adalah kumpulan halaman yang saling berhubungan dan umumnya di simpan di dalam sebuah server. Umumnya sebuah website berisikan informasi yang disediakan secara perorangan, kelompok, atau organisasi. Salah satu contoh web adalah codepolitan.com dimana disitus ini kita bisa membaca artikel, belajar pemrograman melalui tutorial tertulis, mengikuti tutorial video di member premium, serta berdiskusi bersama member yang lain.\n\n## Manfaat Web Programming\n\n- Bisa mengembangkan cara berfikir yang sistematis.\n- Membuat solusi dari suatu masalah dengan menggunakan teknologi. Contoh, banyak orang kesulitan mencari informasi tentang koding, maka kita bisa mengembangkan web yang membahas tentang hal itu. Contoh lainnya, UMKM (Usaha Mikro Kecil dan Menengah) kesulitan menemukan konsumen, maka kita bisa membuat web yang mempertemukan pelaku usaha dengan konsumennya dari seluruh Indonesia yang mana telah dilakukan oleh Achmad Zaky dengan Bukalapak-nya. Bisa kah kamu menemukan sendiri suatu masalah yang terjadi di sekitarmu dan perlu diselesaikan dengan teknologi web?\n\n## Mengapa Belajar Web Programming\n\nAda banyak hal yang membuat kita harus belajar web programming. Yang pertama, **teknologi web** adalah teknologi yang masih terus berkembang hingga saat ini. Alasan kedua, meski banyak yang mengatakan mobile akan menggantikan web, namun nyatanya web masih dipakai oleh banyak orang. Bahkan aplikasi mobile sesungguhnya banyak bergantung pada sistem web sebagai pusat penyimpanan data. Alasan yang terakhir, web programming relatif lebih mudah untuk dipelajari untuk orang awam yang masih buta dengan pemrograman. Karena tingkat kesulitan yang lebih rendah, banyak orang yang sebelumnya tidak mengerti programming sama sekali bisa sukses menjadi seorang web programmer.\n\n## Konsep Client dan Server\n\n**Client** dan **server** adalah bagian penting pada web development. Bedasarkan fungsinya, pemrograman web dibagi menjadi dua yaitu **frontend** dan **backend**. **Frontend** adalah bagian web yang bisa dilihat secara langsung oleh pengguna. Misalnya, saat kita membuka Facebook atau Twitter, maka halaman-halaman yang muncul merupakan bagian dari frontend. Saat kita mendaftar, melakukan login, mengirim pesan, mengunggah gambar, dan aksi dimana kita perlu mengambil atau menyimpan data, maka aksi-aksi tersebut akan terjadi di **backend** yang tidak bisa kita lihat bagaimana aksi-aksi tadi terjadi.\n\nFrontend dan backend sangat erat kaitannya. Jika sebuah web hanya memiliki tampilan atau frontend saja, maka ia tidak bisa melakukan sesuatu yang dinamis. Kita tidak bisa mencari data atau menyimpan data di sebuah web yang tidak memiliki backend. Sebaliknya, jika kita hanya membuat backend-nya saja, pengguna tidak bisa berinteraksi dengan web yang kita buat, yang menyebabkan web kita tidak ada yang memakai.\n\n## Perbedaan Client Side dan Server Side\n\nUntuk **client side** semua proses terjadi di sisi pengguna, client me-request data ke server dimana data di kirim ke server. Pada client side yang ditampilkan adalah halaman website yang berbentuk halaman HTML, CSS, dan JS.\n\nSedangkan untuk **server side** semua proses terjadi di sisi server yaitu di komputer server atau di cloud . Server side bertanggung jawab merespon data yang di request oleh client side. Server side yaitu tempat dimana database, API, atau server side rendering terjadi, sebagai contoh bahasa pemrograman PHP berjalan di server dan di tampilkan ke client sebagai file HTML.\n\n## Web Server / Hosting\n\n**Hosting** adalah penyewaan tempat untuk menampung data-data yang dibutuhkan oleh sebuah website yang bisa berbentuk gambar, email, script, file, atau database. Hosting biasanya berbayar dengan pilihan paket-paket yang bisa dipilih dari rentang harga belasan ribu hingga jutaan rupiah tergantung spesifikasi yang dibutuhkan.\n\n**Hosting** memiliki peran yang sangat penting bagi sebuah web karena hosting lah yang meMbuat web kita bisa diakses oleh orang lain melalui internet. Jika web yang dibuat hanya disimpan di komputer/laptop kita saja, maka tidak ada orang lain yang bisa menggunakan web tersebut.\n\n## Domain\n\n**Domain** adalah nama unik yang diberikan untuk mengidentifikasi alamat. Contoh (IP address) server komputer seperti web server atau email server di internet.\n\nContoh :\n\n- Codepolitan.com\n- Facebook.com\n\nJika di analogikan **domain** adalah alamat rumah sedangkan hosting merupakan tanahnya/rumahnya.\n\n## Konsep Bahasa Pemrograman\n\n**Bahasa perograman** adalah susunan karakter dan kata kunci yang dapat dikonversi ke dalam bahasa mesin sehingga dapat dijalankan oleh komputer.\n\n**Bahasa pemrograman** web adalah bahasa pemrograman yang digunakan untuk membangun aplikasi berbasis web.\n\n## Tipe Bahasa Pemrograman\n\nAda dua tipe bahasa pemrograman web yaitu :\n\n- Client Side Language\n  - HTML\n  - CSS\n  - JavaScript\n- Server Side Language\n  - PHP\n  - Java\n  - Python\n  - Perl\n  - Node.JS\n  - Ruby\n\n## Web Browser\n\n**Web browser** adalah software yang digunakan untuk menjelajahi internet atau mencari informasi dari suatu laman website. Web browser merepresentasikan dokumen HTML ke dalam bentuk visual.\n\nContoh :\n\n- Google Chrome\n- Mozilla Firefox\n- Safari\n- Opera\n\n### Sebelum Membuat Website\n\nSebelum membuat website kita perlu memetakan tiga hal di bawah ini :\n\n- Apa tujuan dari website tersebut ?\n- Siapa saja penggunanya ?\n- Target bisnis yang akan dicapai ?",
              "type": "markdown"
            }
          ]
        },
        {
          "parts_page": [
            {
              "content": "AC06wmiLoUE",
              "type": "youtube"
            },
            {
              "content": "# Dasar HTML\n\n## Apa itu HTML ?\n\nPada tahun 1989, Tim Berners Lee dari organisasi European Organization for Nuclear Research (CERN) mencetuskan ide untuk menciptakan suatu *script* bahasa pemrograman pada suatu dokumen yang kemudian dikenal sebagai HTML. Tim Berners Lee diketaui sebagai penemu HTML. Saat ini penggunaan dan pengembangan HTML diatur oleh World Wide Web Consortium (W3C) dan versi terakhir dari HTML yang sekarang digunakan adalah HTML5. Versi ini memiliki fitur yang lebih baik dari versi HTML sebelumnya. HTML adalah kepanjangan dari *HyperText Markup Language*, merupakan bahasa interpretasi yang digunakan pada sebuah halaman web. HTML itu sendiri bukanlah sebuah bahasa pemrograman pada umumnya, seperti Java, C, C++, visual basic dan sejenisnya. HTML mendeskripsikan struktur halaman web yang ditulis dengan element atau tag yang yang mengapit konten atau teks didalamnya yang akan ditampilkan pada sebuah halaman web oleh browser. Jadi apapun website yang kita lihat pasti awalnya dibangun menggunakan HTML.\n\n## Apa Kegunaan HTML ?\n\n**HTML** berguna untuk menampilkan konten, menghubungkan (*link*) antar halaman, memberi struktur dan informasi terkait dengan sebuah halaman web. Konten sebuah web tidak hanya terbatas pada teks saja, melainkan konten interaktif lainnya seperti video, audio, gambar dan animasi dapat disisipkan dan ditampilkan pada halaman web.\n\nStruktur dasar HTML memiliki susunan file seperti berikut ini :\n\n```html\n<html>\n    <head>\n        <title>Judul halaman</title>\n    </head>\n    <body>\n        <!-- semua yang akan di tampilkan di web disimpan di dalam body -->\n        <h1>Selamat datang</h1>\n    </body>\n</html>\n```\n\n## Struktur HTML\n\nStruktur HTML terdiri dari 3 konsep dasar yaitu tag, elemen dan atribut.\n\n### Tag HTML\n\n**Tag HTML** adalah suatu penanda untuk menandai elemen-elemen dalam suatu dokumen HTML. Fungsi tag adalah untuk memberikan instruksi atau memberitahu kepada browser bagaimana suatu objek di tampilkan berdasarkan tag yang di gunakan, objek disini bisa berupa teks, video, audio dan gambar.\n\nTag HTML pada umumnya dibuat berpasangan, ada tag pembuka dan ada tag penutup. Tag pembuka ditulis seperti ini:\n\n```\n<nama_tag>\n```\n\ndan tag penutup ditulis seperti ini:\n\n```\n</nama_tag>\n```\n\n> **Catatan** : Perbedaan antara tag pembuka dan tag penutup adalah tag penutup memiliki karakter garis miring sebelum nama tagnya.\n\n### Elemen HTML\n\nRangkaian dari tag pembuka, konten dan tag penutup disebut dengan **elemen HTML**. Contoh berikut ini adalah elemen heading 1 dan elemen paragraf:\n\n```html\n<h1>Selamat Datang</h1>\n<p>Selamat belajar pemrograman web.</p>\n```\n\nPada contoh kode di atas, kita memiliki elemen heading 1 yang tersusun dari tag pembuka `<h1>`, konten elemen berupa teks bertuliskan `Selamat Datang` dan tag penutup `</h1>`. Kita juga memiliki elemen paragraf yang tersusun dari tag pembuka `<p>`, konten teks dan tag penutup `</p>`. Perbedaan dari kedua elemen ini adalah, elemen heading digunakan untuk menampilkan judul halaman, sedangkan elemen paragraf digunakan untuk menampilkan konten paragraf. Bila kita buka di browser, maka elemen heading akan dicetak lebih besar dan lebih tebal daripada elemen paragraf.\n\nBila kita memiliki contoh kode seperti ini:\n\n```html\n<body>\n    <h1>Selamat datang</h1>\n    <p>Selamat belajar pemrograman web di <b>CodePolitan</b></p>\n</body>\n```\n\nmaka:\n\n- `<body>` disebut tag body (atau tag pembuka body), `<h1>` adalah tag h1 dan `<p>` adalah tag p atau paragraf\n- `<h1>Selamat datang</h1>` disebut elemen h1\n- `<p>Selamat belajar pemrograman web di <b>CodePolitan</b></p>` disebut elemen p atau paragraf\n- `<b>CodePolitan</b>` disebut elemen b atau bold, `<b>` itu sendiri disebut tag b atau bold\n- semua bagian mulai dari tag pembuka body, berikut subelemen diantara tag pembuka dan penutup body, hingga tag tutup body disebut dengan elemen body.\n\n> **Catatan** : Penulisan elemen harus Penulisan elemen harus lengkap, mulai dari tag pembuka, konten dan tag penutup. Apa yang sudah dibuka wajib ditutup kembali!\n\nAda banyak tag yang dapat kita gunakan di dalam HTML untuk menampilkan konten. Bila kita bagi ke dalam dua area, maka ada tag-tag yang digunakan di dalam elemen head dan ada tag yang digunakan di dalam elemen body.\n\n### Tag di dalam Elemen Head\n\nElemen yang ada di dalam head berfungsi sebagai informasi dari dokumen HTML dan tidak akan ditampilkan di layar browser. Beberapa tag yang dapat digunakan di dalam elemn head diantaranya adalah `<meta>`, `<title>`, `<style>`, `<script>` dan `<link>`.\n\n```html\n<head> \n    <meta charset=\"utf-8\">\n    <title>Judul halaman</title>\n    <style> Style </style>\n    <script> Javascript </script>\n</head>\n```\n\n### Tag di dalam Elemen Body\n\nAda banyak tag yang dapat kita gunakan untuk menampilkan konten di dalam elemen body.\n\nAda tag yang berfungsi untuk menampilkan teks, seperti `<h1>`, `<h2>`, `<h3>`, `<h3>`, `<h4>`, `<h5>`, `<p>` dan sebagainya.\n\nAda juga tag untuk memformat teks, seperti `<b>`, `<i>`, `<strong>`, `<em>`, `<mark>`, `<del>` dan sebagainya.\n\nUntuk menampilkan gambar kamu dapat menggunakan tag `<img>`, dan untuk membuat tautan kamu dapat menggunakan tag `<a>`.\n\nDi dalam HTML, kamu dapat membuat elemen table dengan menggunakan kombinasi dari tag `<table>`, `<thead>`, `<tbody>`, `<tr>`, `<th>`, dan `<td>`. Kamu juga dapat membuat list dengan menggunakan kombinasi dari tag `<ul>`, `<ol>`, `<li>`, `<dl>`, `<dd>`, dan `<dt>`. Terkait pembuatan table dan list akan dibahas secara khusus di bagian selanjutnya.\n\nKamu juga dapat memasukkan video, audio atau format media lainnya menggunakan sejumlah tag seperti `<object>`, `<video>`, `<audio>`, `<embed>`, dan `<iframe>`.\n\nSampai pembahasan ini kamu cukup perlu paham terkait tag dan elemen. Adapun cara penggunaan tag-tag di atas akan dibahas di bagian khusus setelah ini. Bila kamu ingin tahu lebih lengkap tag HTML apa saja yang tersedia dapat dilihat di https://www.w3schools.com/tags/. Jangan kaget bila kamu menemukan banyak tag di HTML. Kamu tak mesti menghapal semuanya, cukup pelajari tag-tag yang akan kamu gunakan saat membuat web nantinya.\n\n### Attribut HTML\n\nAtribut memiliki tugas khusus untuk memberikan informasi tambahan pada sebuah tag.\n\n```html\n<namatag nama-atribut=\"nilai-atribut\"></namatag>\n```\n\nDari contoh kode di atas yang dimaksud dengan atribut adalah tambahan yang ditulis di dalam tag pembuka. Contohnya bila kita hendak membuat tautan atau link, kamu akan perlu menulis minimal seperti ini:\n\n```html\n<a href=\"login.html\">Login</a>\n```\n\nPada contoh kode di atas, kita membuat tautan menggunakan tag `<a>`. Namun menggunakan tag `<a>` saja tidak cukup, karena kita perlu memberi tahu kepada browser kemana halaman akan dialihkan bila pengguna mengklik tautan Login. Oleh karena itu, tag `<a>` dilengkapi dengan atribut `href` yang harus diisi dengan nama URL tujuan dari tautan tersebut. Pada contoh di atas, `href` adalah nama atribut, dan `\"login.html\"` adalah nilai atribut. Nama dan nilai atribut dipisahkan dengan tanda *sama dengan* (=).\n\nSelain tag `<a>` ada banyak tag lain yang memerlukan atribut. Bila dikelompokkan, ada dua jenis atribut, yakni atribut global dan atribut spesifik. Atribut global adalah atribut yang dapat diterapkan pada tag apapun karena sifatnya yang umum. Contoh atribut global diantaranya adalah `class`, `id`, `lang`, `title`, `style` dan sebagainya. Sedangkan atribut spesifik adalah atribut yang hanya berfungsi pada tag-tag tertentu, seperti atribut `href` yang hanya berlaku pada tag `<a>` dan `<link>`, atribut `src` yang hanya berlaku pada tag `<img>` dan `<script>`, dan sebagainya.\n\nDaftar lebih lengkap atribut HTML dapat dilihat di https://www.w3schools.com/html/html_attributes.asp",
              "type": "markdown"
            }
          ]
        },
        {
          "parts_page": [
            {
              "content": "eE3MW_doEg0",
              "type": "youtube"
            },
            {
              "content": "# CSS dan Style HTML Dasar\n\n## Apa itu CSS?\n\n**CSS** singkatan dari *Cascading Style Sheeet*, yaitu dokumen yang berisi definisi style untuk sebuah dokumen HTML atau untuk mengatur tampilan dari dokumen HTML, meliputi layout dokumen, pewarnaan dan tampilan font dan teks dan lain sebagainya. Penulisan **CSS** baiknya ditulis terpisah dari konten HTML hal ini dilakukan untuk meningkatkan daya akses konten pada web dan mengurangi kerumitan dalam penulisan kode dan struktur dari dokumen HTML.\n\nDengan adanya CSS, konten dan desain web akan mudah dibedakan, sehingga memungkinkan untuk melakukan pengulangan pada tampilan-tampilan tertentu dalam suatu web, sehingga akan memudahkan dalam membuat halaman web yang banyak, yang pada akhirnya dapat memangkas waktu pembuatan web.\n\n## Struktur Penulisan CSS\n\n**CSS** ditulis dengan format penulisan seperti berikut:\n\n```css\nselector { property:value }\nselector { property:value; property:value }\n```\n\n**Selector** adalah bagian CSS yang berfungsi untuk memilih elemen yang akan dikenai style. **Property** adalah jenis style yang akan diterapkan pada elemen, dan **value** adalah nilai dari property yang digunakan. Property dan value CSS ditulis diantara kurung kurawal. Bila property CSS yang digunakan lebih dari satu, maka pisahkan dengan titik koma.\n\nContoh penulisan CSS:\n\n```html\n<style>\nh1 {\n    font-size: 40px; \n    color: orange; \n}\n</style>\n\n<h1>Teks Judul</h1>\n```\n\nPada contoh di atas, kita menulis `h1` sebagai selector yang artinya kita ingin agar elemen `<h1>` pada HTML dikenai style. Property yang diterapkan adalah `font-size` untuk mengatur ukuran font, diset dengan nilai `40px`, dan property `color` untuk mengatur warna teks, diset dengan nilai `orange`.\n\n## Teknik Penerapan CSS\n\nAda 3 cara untuk memasang CSS pada dokumen HTML yaitu *external*, *internal* dan *inline*.\n\n### Inline Style Sheet\n\nPada teknik ini kita menulis kode CSS di dalam tag HTML, tepatnya di dalam atribut `style`.\n\n```html\n<h1 style=\"font-size:40px; color:orange;\">\n    Teks Judul\n</h1>\n```\n\nTeknik ini akan menerapkan style hanya pada elemen yang dikenai style tersebut.\n\n### Internal Style Sheet\n\nTeknik internal stylesheet adalah menuliskan kode CSS di dalam file dokumen HTML tapi dikumpulkan di dalam elemen `<style>`.\n\n```html\n<style>\nh1 {\n    font-size: 40px; \n    color: orange; \n}\n</style>\n\n<h1>Teks Judul</h1>\n```\n\nTeknik ini akan memberlakukan CSS hanya pada dokumen HTML dimana ia disimpan.\n\n### External Style Sheet\n\nTeknik eksternal stylesheet adalah menuliskan kode untuk style CSS di file terpisah dengan kode HTML.\n\nStyle di definisikan di dalam file, misalkan **style.css**:\n\n```css\n/* style.css */\nh1 {\n    font-size: 40px;\n    color: orange;\n}\n```\n\nkemudian **style.css** ditautkan didalam dokumen HTML menggunakan tag `<link>`:\n\n```html\n<!-- index.html-->\n<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n<h1>Teks Judul</h1>\n```\n\nMaka semua style yang ada di dalam **style.css** akan diterapkan ke dalam dokumen HTML. Keuntungan dari teknik ini adalah, CSS dapat diterapkan ke banyak dokumen HTML sehingga penulisan CSS menjadi lebih efisien.\n\n## CSS Properties\n\n**Property** digunakan untuk memilih jenis style apa yang akan diterapkan pada tag, class, atau id yang telah dipilih pada selector, dan pada satu selector bisa berisi beberapa property. Pada CSS terdapat banyak sekali property yang dapat digunakan untuk menghias webisite\n\nJenis propery CSS diantaranya adalah\n\n1. background\n2. border\n3. box model\n4. layouting\n5. font & text, dll.\n\nKarena ada begitu banyak property CSS, maka kita tidak perlu menghafal semuanya, cukup pahami apa fungsi dari property yang akan digunakan. Referensi property CSS lebih lengkap bisa dilihat di https://www.w3schools.com/cssref/\n\n## Selector\n\nPada CSS terdapat **selector** yang digunakan untuk memilih elemen HTML yang akan dikenai style. Pemilihan elemen menggunakan nama tag, nilai atribut, atau pola tertentu.\n\nBerikut adalah contoh penulisan selector\n\n```css\nh1 { color:red }\n```\n\nCara membaca selector diatas adalah \"*Pilih elemen h1 pada document, lalu set property colornya menjadi red*\"\n\nTerdapat dua macam tag **selector** yaitu **single selector** dan **multiple selector** (menargetkan tag yang berbeda dengan style yang sama), bisa kita lihat pada contoh dibawah ini:\n\nContoh single selector\n\n```css\nh1 { color:red }\np { font-size:16px }\n```\n\nContoh multiple selector (menargetkan tag yang berbeda dengan style yang sama)\n\n```css\nh1,h2,h3,p {\n    font-family: \"arial\", sans-sarif;\n    color: #666;\n}\n```\n\n### Selector dengan id dan class\n\nSelector `class` digunakan untuk menentukan style juga sama seperti id. Bedanya adalah jika id hanya boleh dipanggil satu kali saja, class bisa dipanggil berkali kali pada satu halaman. Selector ini ditulis dengan awalan titik atau dot “.” pada CSS dan `class=“nama-class”` pada HTML. Sedangkan selector `id` hanya boleh dipanggil satu kali, selain itu untuk Selector ini ditulis dengan awalan pagar “#” pada CSS dan `id=“nama-id”` pada HTML.\n\nBerikut contoh implementasi selector id dan class\n\n```html\n<style>\n    #higlight {background-color:yellow}\n    .red{color:red}\n</style>\n\n<h1>Penggunaan Selector Class dan Id</h1>\n<p class=\"red\">Ini selector class</p>\n<p id=\"higlight\">Ini selector id</p>\n```",
              "type": "markdown"
            }
          ]
        }
      ]
    },
    {
      "id_content": 1,
      "pages": [
        {
          "parts_page": [
            {
              "content": "m4PxGxaF8wY",
              "type": "youtube"
            },
            {
              "content": "# Membuat Tabel\n\n## Bagaimana cara membuat tabel?\n\nUntuk menampilkan data yang terstruktur memiliki banyak cara, mulai dari menggunakan grafik,sampai dengan menggunakan tabel, namun pada pembahasan ini kita akan sedikit mengulas tentang menampilkan data menggunakan tabel.\n\nSebuah tabel terdiri dari dua elemen utama, yaitu baris dan kolom. HTML sudah menyediakan beberapa elemen untuk membuat sebuah tabel, yaitu `<table>`, `<tr>`, `<td>`. Sebelum membuat baris dan kolom maka kita harus inisialisasi tabel terlebih dahulu menggunakan elemen `<table>`.\n\n```html\n<table>\n    <!-- Data -->\n</table>\n```\n\nSelanjutnya, kita menambahkan baris ke dalam tabel tersebut dengan menggunakan elemen `<tr>`.\n\n```html\n<table>\n    <tr>\n        <!-- Isi baris tabel -->\n    </tr>\n    <tr>\n        <!-- Isi baris tabel -->\n    </tr>\n\n</table>\n```\n\nKemudian setiap baris dari tabel tentunya harus diisikan dengan data yang akan menghasilkan kolom tabel. untuk mengisi data pada kolom tabel pada html menggunakan elemen `<td>`.Tetapi, jika ingin membuat baris pertama pada tabel sebagai header, kita dapat mengisikan baris pertama dengan elemen `<th>`.\n\nDapat kita lihat hasil akhir dari tabel yang kita buat sebagai berikut:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Dasar Html</title>\n</head>\n<body>\n    <table>\n        <tr>\n            <th>No</th>\n            <th>Nama</th>\n            <th>Alamat</th>\n        </tr>\n        <tr>\n            <td>1</td>\n            <td>Roy</td>\n            <td>Bandung</td>\n        </tr>\n        <tr>\n            <td>2</td>\n            <td>Si Boy</td>\n            <td>Jakarta</td>\n        </tr>\n        <tr>\n            <td>3</td>\n            <td>Roni</td>\n            <td>Surabaya</td>\n        </tr>\n    </table>\n</body>\n</html>\n```\n\nBila kita buka halaman html tersebut di browser, maka akan muncul seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/html1.png)\n\nDapat kita lihat dari gambar diatas, tidak terlihat seperti tabel ya, kita perlu menambahkan `border=\"1\"` pada elemen tabel tersebut.\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Dasar Html</title>\n</head>\n<body>\n    <table border=\"1\">\n        <tr>\n            <th>No</th>\n            <th>Nama</th>\n            <th>Alamat</th>\n        </tr>\n        <tr>\n            <td>1</td>\n            <td>Roy</td>\n            <td>Bandung</td>\n        </tr>\n        <tr>\n            <td>2</td>\n            <td>Si Boy</td>\n            <td>Jakarta</td>\n        </tr>\n        <tr>\n            <td>3</td>\n            <td>Roni</td>\n            <td>Surabaya</td>\n        </tr>\n    </table>\n</body>\n</html>\n```\n\nBila kita buka halaman html tersebut di browser, maka hasilnya akan muncul seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/html2.png)\n\nSeperti itu kira-kira bentuk table pada HTML. Sekarang kita lanjut pada fungsi penggabungan baris dan kolom. Pada HTML terdapat perintah **colspan** dan **rowspan**. **Colspan** adalah perintah untuk menggabungkan beberapa kolom menjadi satu. Contohnya kalian bisa rubah htmlnya menjadi seperti ini.\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Dasar Html</title>\n</head>\n<body>\n    <table border=\"1\">\n        <tr>\n            <th colspan=\"2\">No</th>\n            <th>Alamat</th>\n        </tr>\n        <tr>\n            <td>1</td>\n            <td>Roy</td>\n            <td>Bandung</td>\n        </tr>\n        <tr>\n            <td>2</td>\n            <td>Si Boy</td>\n            <td>Jakarta</td>\n        </tr>\n        <tr>\n            <td>3</td>\n            <td>Roni</td>\n            <td>Surabaya</td>\n        </tr>\n    </table>\n</body>\n</html>\n```\n\nBila kita buka halaman html tersebut di browser, maka hasilnya akan menjadi seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/html3.png)\n\nLalu ada **rowspan** yang berfungsi untuk menggabungkan beberapa baris menjadi satu. Contohnya seperti ini :\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Dasar Html</title>\n</head>\n<body>\n    <table border=\"1\">\n        <tr>\n            <th>No</th>\n            <th>Nama</th>\n            <th>Alamat</th>\n        </tr>\n        <tr>\n            <td>1</td>\n            <td>Roy</td>\n            <td rowspan=\"3\">Bandung</td>\n        </tr>\n        <tr>\n            <td>2</td>\n            <td>Si Boy</td>\n        </tr>\n        <tr>\n            <td>3</td>\n            <td>Roni</td>\n        </tr>\n    </table>\n</body>\n</html>\n```\n\nBila kita buka halaman html tersebut di browser, maka hasilnya akan menjadi seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/html4.png)\n\nSelain itu kita juga dapat menambahkan atribut `border` dan yang lainya kedalam tag `<style>`, coba kita lihat contoh dibawah ini :\n\n```html\n<!DOCTYPE html>\n<style>\n    table,\n    th,\n    td{\n        border: 1px solid red; \n    }\n\n    table{\n        border-collapse: collapse;\n        width: 100%;\n    }\n\n    th{\n        height: 50px;\n    }\n\n    th,\n    td{\n        padding: 15px;\n        text-align: left;\n    }\n\n</style>\n<html>\n<head>\n    <title>Dasar Html</title>\n</head>\n<body>\n    <table>\n        <tr>\n            <th>No</th>\n            <th>Nama</th>\n            <th>Alamat</th>\n        </tr>\n        <tr>\n            <td>1</td>\n            <td>Roy</td>\n            <td rowspan=\"3\">Bandung</td>\n        </tr>\n        <tr>\n            <td>2</td>\n            <td>Si Boy</td>\n        </tr>\n        <tr>\n            <td>3</td>\n            <td>Roni</td>\n        </tr>\n    </table>\n</body>\n</html>\n```\n\n",
              "type": "markdown"
            }
          ]
        },
        {
          "parts_page": [
            {
              "content": "ob-uagOuzaM",
              "type": "youtube"
            },
            {
              "content": "# Membuat List\n\n## Membuat List dengan HTML\n\nList/daftar biasanya mengarah pada pengurutan sebuah kata yang didalamnya terdiri dari poin-poin tersendiri. Sebagai contoh pada tutorial pembuatan makanan dimana terdapat tahapan-tahapan yang perlu dituliskan secara terurut. Dalam pembuatan list dibagi menjadi 2 yaitu **ordered list** dan **unordered list**. **Ordered list** atau daftar terurut memberikan fasilitas untuk membuat daftar data secara terurut, sedangkan **unordered list** digunakan untuk menampilkan daftar data yang tidak memiliki urutan tertentu, atau yang tidak mementingkan urutan.\n\nUntuk pembuatan **ordered list** kita menggunakan elemen `<ol>`(ordered list) dan isi dari list sendiri dibuat dengan menggunakan elemen `<li>` (list item), sedangkan untuk membuat ordered list menggunakan elemen `<ul>` (unordered list), dan untuk mengisikan daftar, kita dapat menggunakan elemen `<li>` (list item).\n\nBerikut contoh penggunaan **ordered list** dengan tag `<ol>`\n\n```html\n<ol>\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n</ol>\n```\n\nBerikut contoh penggunaan **unordered list** dengan tag `<ul>`\n\n```html\n<ul>\n    <li>Ini adalah contoh daftar unordered list</li>\n    <li>Ini adalah contoh daftar unordered list</li>\n    <li>Ini adalah contoh daftar unordered list</li>\n    <li>Ini adalah contoh daftar unordered list</li>\n    <li>Ini adalah contoh daftar unordered list</li>\n</ul>\n```\n\nBerikut ini contoh implementasi dan output membuat **ordered list** dan **unordered list**\n\n```html\n<ol>\n    Ordered List\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n</ol>\n\n<ul>\n    Unordered List\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n    <li>Ini adalah contoh daftar ordered list</li>\n</ul>\n```\n\n\n",
              "type": "markdown"
            }
          ]
        },
        {
          "parts_page": [
            {
              "content": "x1ndYEbg780",
              "type": "youtube"
            },
            {
              "content": "# Membuat Layout\n\n## Membuat Layout dengan Table\n\nUntuk membuat layout sederhana, kita dapat menggunakan tag `<table>`.\n\nTabel disusun dari kolom dan baris, kita dapat memanfaatkan kolom dan baris tersebut menjadi sebuah layout.\n\n```html\n<table width=\"100%\">\n    <tr>\n        <td colspan=\"2\" style=\"background:red\">\n            <h1>Header</h1>\n        </td>\n    </tr>\n    <tr valign=\"top\">\n        <td width=\"50\" style=\"background:green\">\n            <strong>Sidebar</strong>\n        </td>\n        <td width=\"100\" height=\"550\"style=\"background:purple\">\n            <strong>Halaman Konten</strong>\n            Lorem Ipsum is simply dummy text of the printing and typesetting        \n            industry. \n            Lorem Ipsum has been the industry's standard dummy text ever since the  \n            1500s, when an unknown printer took a galley of type and scrambled it to \n            make a type specimen book. It has survived not only five centuries, but \n            also the leap into electronic typesetting, remaining essentially unchanged. \n            It was popularised in the 1960s with the release of Letraset sheets \n            containing Lorem Ipsum passages, and more recently with desktop publishing \n            software like Aldus PageMaker including versions of Lorem Ipsum.\n        </td>\n    </tr>\n    <tr>\n        <td colspan=\"2\" style=\"background:blue\">\n            <h1>Footer</h1>\n        </td>\n    </tr>\n</table>\n```\n\n**colspan** digunakan untuk menggabungkan kolom .\n\n**width** digunakan untuk mengatur lebar kolom. kita bisa mengisinya dalam bentuk px maupun %.\n\n**height** digunakan untuk mengatur tinggi kolom. kita bisa mengisinya dalam bentuk px maupun %.\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/layout.png)\n\nSetelah membuat kerangka layout sederhana, kita dapat mengembangkan layout tersebut seperti menambahkan navigasi pada kolom sidebar.\n\n```html\n<ul>\n    <li><a href=\"home.html\">Home</a></li>\n    <li><a href=\"about.html\">About</a></li>\n    <li><a href=\"contact.html\">Contact</a></li>\n    <li><a href=\"forum.html\">Forum</a></li>\n</ul>\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/layout2.png)\n\nSaat ini membuat layout dengan table mulai ditinggalkan.\n\nMembuat layout dengan table tidak direkomendasikan karena akan menyulitkan kita dalam mendesain ulang di kemudian hari.\n\n## Membuat Layout dengan tag `<div>`\n\nUntuk membuat layout dengan tag `<div>`, kita membutuhkan style css.\n\n**Membuat kerangka / struktur Layout**\n\n```html\n<div id=\"header\">\n    Header\n</div>\n<div id=\"sidebar\">\n    Sidebar\n</div>\n<div id=\"content\">\n    Content\n</div>\n<div id=\"footer\">\n    Footer\n</div>\n```\n\nPada baris kode di atas, akan menghasilkan output seperti di bawah ini, belum terlihat seperti sebuah layout.\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/layout3.png)\n\nUntuk membuatnya menjadi sebuah layout, kita harus menambahkan style css berdasarkan id yang dipanggil oleh masing-masing `<div>`\n\n**Menambah Style CSS**\n\n```css\n<style>\n#header\n{\n    background  : #00ccff;\n    height      : 10%;\n    font-size   : 1.5em;\n    text-align  :center;\n    padding-top : 20px;\n}\n#sidebar\n{\n    background  : #99ccff;  \n    float       : left;\n    height      : 400px;\n    width       :30%;\n    font-size   : 1.5em;\n    text-align  :center;\n    padding-top : 20px;\n\n}\n#content\n{\n    background  : #9999ff;\n    float       : right;\n    width       : 70%;\n    height      : 400px;\n    font-size   : 1.5em;\n    text-align  :center;\n    padding-top : 20px;\n}\n#footer\n{\n    background  : #3399ff;\n    clear       : both;\n    font-size   : 1.5em;\n    text-align  :center;\n}\n</style>\n```\n\n**Mengaitkan struktur layout html dengan style css**\n\n```html\n<style>\n#header\n{\n    background  : #00ccff;\n    height      : 10%;\n    font-size   : 1.5em;\n    text-align  :center;\n    padding-top : 20px;\n}\n#sidebar\n{\n    background  : #99ccff;  \n    float       : left;\n    height      : 400px;\n    width       :30%;\n    font-size   : 1.5em;\n    text-align  :center;\n    padding-top : 20px;\n\n}\n#content\n{\n    background  : #9999ff;\n    float       : right;\n    width       : 70%;\n    height      : 400px;\n    font-size   : 1.5em;\n    text-align  :center;\n    padding-top : 20px;\n}\n#footer\n{\n    background  : #3399ff;\n    clear       : both;\n    font-size   : 1.5em;\n    text-align  :center;\n}\n</style>\n<div id=\"header\">\n    Header\n</div>\n<div id=\"sidebar\">\n    Sidebar\n</div>\n<div id=\"content\">\n    Content\n</div>\n<div id=\"footer\">\n    Footer\n</div>\n```\n\nNah jika kode diatas dijalankan maka akan menghasiilkan layout seperti gambar dibawah ini :\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/layout4.png)\n\n",
              "type": "markdown"
            }
          ]
        }
      ]
    },
    {
      "id_content": 2,
      "pages": [
        {
          "parts_page": [
            {
              "content": "# Membuat Layout Dasar\n\nBuat folder baru dengan nama `latihan-layout/` dan buat file baru dengan nama `index.html` di dalamnya. Tulislah kode HTML berikut pada file `index.html`:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>My Webpage</title>\n    <style type=\"text/css\">\n        .header {\n            background-color: #eee;\n            min-height: 50px;\n        }\n        .content {\n            background-color: #ddd;\n            min-height: 500px;\n        }\n        .footer {\n            background-color: #ccc;\n            min-height: 50px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>Logo Produk</h1>\n    </div>\n\n    <div class=\"content\">\n        <h2>Our Products</h2>\n    </div>\n\n    <div class=\"footer\">\n        <p>copyright 2018 My Page</p>\n    </div>\n</body>\n</html>\n```\n\nPada kode di atas, kita membuat 3 buah elemen utama di bawah `<body>`, yakni `<div>` dengan masing-masing class header, content dan footer. Pada `<div>` dengan class header, kita akan isi dengan logo dan menu halaman. Kemudian pada `<div>` dengan class content, kita isi dengan konten dari web kita nanti, yakni daftar artikel. Dan terakhir pada `<div>` dengan class footer, kita isi dengan teks copyright.\n\nPada bagian `<head>` kita telah mendefinisikan style untuk setiap `<div>`, diantaranya background-color untuk memberi warna latar agar kotak dari setiap elemen dapat kita lihat batas masing-masingnya. Kita juga menambahkan style min-height untuk mengatur tinggi minimum dari setiap elemennya. Setiap style kita set menggunakan nama classnya.\n\nBila kita buka halaman html tersebut di browser, maka akan muncul seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/dasar1.png)\n\nSetiap elemen `<div>` di atas menjadi baris layout. Karena `<div>` bersifat block, maka lebar dari elemennya akan menghabiskan ruang parentnya ke samping. Bila kita ingin membuat layout boxed, yakni layout halaman dengan jarak pinggir di kiri dan di kanan, maka kita dapat menyimpan semua `<div>` tersebut di dalam satu `<div>` utama sebagai parentnya.\n\nUbah kode HTML yang dicetak tebal pada bagian body sehingga menjadi seperti ini:\n\n```html\n<body>\n    <div class=\"container\">\n    <div class=\"header\">\n        <h1>Logo Produk</h1>\n    </div>\n\n    <div class=\"content\">\n        <h2>Our Products</h2>\n    </div>\n\n    <div class=\"footer\">\n        <p>copyright 2018 My Page</p>\n    </div>\n    </div>\n</body>\n```\n\nKemudian pada tag `<style>` di bagian header, tambahkan CSS berikut untuk memberi style pada elemen `<div>` yang berclass container:\n\n```css\n<style type=\"text/css\">\n.container {\n        width: 800px;\n    margin: 0 auto;\n}\n    .header {\n        background-color: #eee;\n        min-height: 50px;\n    }\n</style>\n```\n\nDengan menyimpan ketiga elemen `<div>` baris di dalam `<div>` utama, maka lebar dari setiap `<div>` anaknya akan mengikuti lebar elemen induknya.\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/dasar2.png)\n\nPerbaharui kode HTML di dalam `<div class=”header”></div>` menjadi seperti ini:\n\n```html\n<div class=\"header\">\n<h1>Logo Produk</h1>\n<div class=\"logo\">\n  <img src=\"https://i.ibb.co/7bQ4mVX/images.png\">\n</div>\n<div class=\"menu\">\n    <ul>\n        <li><a href=\"#\">Home</a></li>\n        <li><a href=\"#\">About</a></li>\n        <li><a href=\"#\">Contact</a></li>\n    </ul>\n</div>\n</div>\n```\n\nBila kita lihat hasilnya di browser, maka gambar dan list menu akan tampil seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/dasar3.png)\n\nTambahkan kode CSS berikut pada tag `<style>` agar tampilannya menjadi rapi.\n\n```css\n.header {\n    background-color: #eee;\n    min-height: 50px;\n    text-align: center;\n}\n.logo img {\n    width: 200px;\n}\n.menu ul {\n    padding: 0;\n}\n.menu ul li {\n    display: inline-block;\n}\n.menu ul li a {\npadding: 10px 20px;\ntext-decoration: none;\n}\n```\n\nPada CSS di atas, kita menambahkan 3 selector baru, yakni selector untuk elemen image pada .logo agar ukurannya tidak terlalu besar. Selain itu kita ubah mode display dari elemen `<li>` yang defaultnya block menjadi inline-block agar ditampilkan menyamping. Kita juga menambahkan padding pada setiap link menu dan membersihkannya dari garis bawah. Tampilan akhirnya akan menjadi seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/dasar4.png)",
              "type": "markdown"
            }
          ]
        },
        {
          "parts_page": [
            {
              "content": "# Membuat Daftar Produk\n\nSekarang kita akan mengisi bagian konten halaman. Bagian konten akan kita isi dengan daftar produk. Edit kode bagian content menjadi seperti ini:\n\n```html\n<div class=\"content\">\n    <h2>My Articles</h2>\n    <h2>My Products</h2>\n\n    <div class=\"thumbnail\">\n        <img src=\"http://via.placeholder.com/250x150\">\n        <h2>Product 2</h2>\n        <p>Rp 250.000</p>\n    </div>\n</div>\n```\n\nKemudian pada bagian `<style>` tambahkan CSS berikut:\n\n```css\n.thumbnail {\n    background-color: white;\n    text-align: center;\npadding: 10px;\n}\n```\n\nHasil dari kode di atas akan nampak seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/produk1.png)\n\nKita ingin agar dalam satu baris, terdapat 3 buah produk yang ditampilkan. Sedangkan pada hasil kode yang sudah kita miliki, kita hanya memiliki satu buah produk yang memenuhi semua lebar baris. Oleh karena itu, kita harus mengatur width dari elemen .thumbnail agar dalam satu baris dapat masuk 3 buah produk.\n\nTambahkan baris kode CSS berikut pada bagian selector .thumbnail:\n\n```css\n.thumbnail {\n    background-color: white;\n    text-align: center;\n    padding: 10px;\n    width: 225px;\n    margin: 10px;\n}\n```\n\nKita set widthnya menjadi 225px dengan asumsi dari total lebar parentnya yang 800px dapat diisi dengan tiga buah kotak thumbnail berukuran 225px. Selain itu kita juga menambahkan margin pada thumbnail agar jarak satu sama lain tidak berhimpitan. Hasil akhir dari pembaharuan kode di atas akan menjadi seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/produk2.png)\n\nDan bila kita menyalin elemen .thumbnail menjadi 3 buah, akan nampak seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/produk3.png)\n\nTernyata .thumbnail kedua dan ketiga akan ditampilkan ke bawah, meskipun width dari setiap thumbnail sudah dibuat lebih kecil. Hal ini terjadi karena sifat display:block dari elemen .thumbnail yang akan mengisi lebar dari parentnya. Adapun ruang kosong di sebelah kanan dari setiap elemen .thumbnail setelah widthnya diperkecil akan otomatis menjadi margin dari elemen tersebut.\n\nTambahkan CSS berikut pada selector .thumbnail:\n\n```css\n.thumbnail {\n    background-color: white;\n    text-align: center;\n    padding: 10px;\n    width: 225px;\n    margin: 10px;\n    float: left;\n}\n.thumbnail img {\n    width: 100%;\n}\n```\n\nPada .thumbnail, kita tambahkan property float:left sehingga ruang sisa dari setiap barisnya akan kosong dan diisi oleh elemen di bawahnya. Selain itu kita juga menambahkan selector baru yakni untuk elemen image yang ada di dalam .thumbnail agar ukuran widthnya mengikuti ukuran dari parentnya.\n\nHasil akhir dari pembaharuan kode kita akan tampil seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/produk4.png)\n\nMasalah selanjutnya yang harus kita tangani dari penggunaan float adalah membersihkan efek float. Bila kamu coba menyalin elemen .thumbnail menjadi 6 buah atau lebih, maka tampilannya akan seperti ini:\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/produk5.png)\n\nSeperti kita lihat, .thumbnail keluar dari kotak, dan teks footer naik mengisi ruang kosong di sebelah kanan .thumbnail terakhir. Untuk mengatasi hal ini, kita cukup menambahkan CSS overflow:auto pada parent dari .thumbnail, yakni pada elemen .content:\n\n```css\n.content {\n    background-color: #ddd;\n    min-height: 500px;\n    overflow: auto;\n}\n```\n\nDengan demikian, efek float tidak akan mengenai elemen yang ada di bawahnya.\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/produk6.png)\n\nTerakhir kita tinggal merapikan konten untuk footer, dengan menambahkan padding dan rata tengah. Tambahkan CSS berikut pada bagian selector `.footer`:\n\n```css\n.footer {\n    background-color: #ccc;\n    min-height: 50px;\n    padding: 20px;\n    text-align: center;\n}\n```\n\n![gambar1](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/produk7.png)",
              "type": "markdown"
            }
          ]
        }
      ]
    },
    {
      "id_content": 3,
      "pages": [
        {
          "parts_page": [
            {
              "content": "AQf-_jFlpCo",
              "type": "youtube"
            },
            {
              "content": "# Mengenal Fitur CSS3\n\nCSS 3 adalah pengembangan dari generasi CSS sebelumnya, ada beberapa penambahan fitur baru pada CSS 3 antara lain :\n\n## REM VALUES\n\nMenentukan nilai relatif sebuah elemen terhadap elemen html.\n\nArtinya, Jika ukuran font dari elemen html adalah 16px maka 1 rem = 16px untuk semua elemen.\n\ncontoh :\n\n```css\nhtml\n{\n    font-size : 20px;\n}\np\n{\n    font-size : 0.75rem;\n}\nlabel\n{\n    font-size : 1.25rem;\n}\n```\n\ndari contoh di atas, maka didapatkan ukuran font elemen p adalah 0.75 dari 20px yaitu 15px , sedangkan ukuran font elemen label adalah 1.25 dari 20px yaitu 25px.\n\n## BACKGROUND SIZE\n\nDigunakan untuk menentukan ukuran gambar background.\n\n```\nNilai Properti :\n```\n\n**auto**\n\nMenghasilkan Nilai default. Gambar background ditampilkan dalam ukuran aslinya\n\ncontoh gambar berukuran width : 15px dan height : 15px , maka akan ditampilkan sesuai ukuran tersebut, yakni width : 15px dan height : 15px\n\n```css\n<style>\n.banner\n{\n    background-image:url('bg.png');\n    background-repeat:no-repeat;\n    background-size:auto;\n}\n</style>\n```\n\n***length\\***\n\nMengatur lebar dan tinggi gambar background.\n\nNilai pertama menetapkan lebar, nilai kedua menetapkan tinggi.\n\nJika hanya satu nilai yang diberikan, yang kedua diatur ke \"auto\".\n\n```css\n<style>\n.banner\n{\n    background-image:url('bg.png');\n    background-repeat:no-repeat;\n    background-size:75px 75px\n}\n</style>\n```\n\n***percentage\\***\n\nMengatur lebar dan tinggi gambar background dalam persen elemen induk.\n\nNilai pertama menetapkan lebar, nilai kedua menetapkan tinggi.\n\nJika hanya satu nilai yang diberikan, yang kedua diatur ke \"auto\".\n\n```css\n<style>\n.banner\n{\n    background-image:url('bg.png');\n    background-repeat:no-repeat;\n    background-size:70% 70%;\n}\n</style>\n```\n\n**cover**\n\nMengubah ukuran gambar background untuk menutupi seluruh kontainer, bahkan jika harus meregangkan gambar atau memotong sebagian dari ujung gambar.\n\n```css\n<style>\n.banner\n{\n    background-image:url('bg.png');\n    background-repeat:no-repeat;\n    background-size:cover;\n}\n</style>\n```\n\n**contain**\n\nMengubah ukuran gambar background sesuai ratio gambar dan memastikan gambar terlihat sepenuhnya. Misalkan suatu kontainer memiliki ratio 18 dibanding 9 (misal width 180px dan height 90px) , sedangkan gambar background memiliki ratio 15 dibanding 9 (misal width 150px dan height 90px) maka gambar background akan ditampilkan sepenuhnya yaitu 150px dan height 90px dan menyisakan ruang kosong (tanpa gambar) 30px.\n\n```css\n<style>\n.banner\n{\n    background-image:url('bg.png');\n    background-repeat:no-repeat;\n    background-size:contain;\n}\n</style>\n```\n\n## CSS ANIMATION\n\nDigunakan untuk menambahkan animasi pada halaman web\n\n**Browser pendukung :**\n\n| Property                | Animation                   |\n| ----------------------- | --------------------------- |\n| Chrome                  | 43.0 4.0 -webkit-           |\n| Internet Explore / Edge | 10.0                        |\n| Firefox                 | 16.0 5.0 -moz-              |\n| Safari                  | 9.0 4.0 -webkit-            |\n| Opera                   | 30.0 15.0 -webkit- 12.0 -o- |\n\n**Keterangan :**\n\nAngka-angka dalam tabel menentukan versi browser pertama yang sepenuhnya mendukung properti.\n\nAngka-angka yang diikuti oleh -webkit-, -moz-, atau -o- menentukan versi pertama yang bekerja dengan awalan -webkit-, -moz-, atau -o-.\n\nContoh Pengguna opera versi 30.0 ke atas :\n\n```css\n   div \n   {\n       animation-iteration-count: 2;\n   }\n```\n\nSedangkan pengguna opera versi 15.0 hingga 29.0 :\n\n```css\n   div    {    -webkit-animation-iteration-count: 2;    }\n```\n\n**Nilai Properti :**\n\n***animation-name\\***\n\nmenentukan nama *keyframe* yang akan dikaitkan ke *selector*\n\n***animation-duration\\***\n\nmenetukan berapa lama waktu (dalam satuan detik atau mili detik) yang diperlukan untuk menyelesaikan animasi\n\n***animation-timing-function\\***\n\nMenentukan kurva kecepatan animasi\n\n1. linear\n\n   mengatur animasi dengan kecepatan yang sama dari awal hingga akhir\n\n2. ease\n\n   Nilai default *animation-timing-function* yaitu animasi memiliki kecepatan awal lambat, kemudian cepat, kemudian berakhir perlahan\n\n3. ease-in\n\n   mengatur animasi dengan kecepatan awal / permulaan yang lambat\n\n4. ease-out\n\n   mengatur animasi dengan akhir yang lambat\n\n5. ease-in-out\n\n   mengatur animasi dengan awal yang lambat dan akhir yang lambat\n\n6. initial\n\n   menetapkan properti ke nilai default\n\n7. inherit\n\n   Mengikuti nilai properti dari elemen induk, misalkan pada elemen induk diset ease-in-out maka akan ikut diset ease-in-out juga.\n\n***animation-delay\\***\n\nmenentukan penundaan / jeda sebelum animasi dimulai\n\n***animation-iteration-count\\***\n\nmenentukan berapa kali animasi harus dimainkan\n\nContoh apabila harus dimainkan 2x :\n\n```css\ndiv {    animation-iteration-count: 2;}\n```\n\n***animation-direction\\***\n\nmenentukan apakah animasi harus dimainkan ke depan, mundur atau gabungan maju dan mundur (alternate).\n\nNilai properti :\n\n1. normal\n\n   Animasi dimainkan seperti biasa (ke depan)\n\n2. reverse\n\n   Animasi dimainkan secara terbalik (mundur)\n\n3. alternate\n\n   Animasi dimainkan ke depan terlebih dahulu, lalu mundur\n\n4. alternate-reverse\n\n   Animasi diputar mundur terlebih dahulu, lalu ke depan\n\n5. initial\n\n   Mengatur animasi ke nilai default\n\n6. inherit\n\n   Mengikuti nilai properti dari elemen induk, misalkan pada elemen induk diset reverse maka akan ikut diset reverse juga.\n\nContoh penggunaan animation-direction :\n\n```css\ndiv {    animation-direction: reverse;}\n```\n\n***animation-fill-mode\\***\n\nmenentukan gaya sebuah elemen ketika animasi tidak sedang dimainkan (sebelum dimulai, setelah berakhir, atau keduanya).\n\n***animation-play-state\\***\n\nmenentukan apakah animasi berjalan atau berhenti.\n\n## More Pseudoclass\n\nDigunakan untuk menentukan style khusus suatu elemen :\n\n**:first-child**\n\n```css\nli:first-child\n```\n\nTujuan contoh diatas adalah menentukan style khusus elemen `<li></li>` yang pertama.\n\n```html\n<style>li:first-child {    background-color: yellow;    color           : red;}</style><h1>Daftar Bekal Piknik</h1><ul>    <li>Nasi</li>    <li>Sate</li>    <li>Sayuran</li></ul>\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/pc.png)\n\n**:last-child**\n\nKebalikan dari first child, menentukan style khusus elemen yang terakhir\n\n```html\n<style>li:last-child {    background-color: yellow;    color           : red;}</style><h1>Daftar Bekal Piknik</h1><ul>    <li>Nasi</li>    <li>Sate</li>    <li>Sayuran</li></ul>\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/ps2.png)\n\n**nth-child (n)**\n\nMenentukan style khusus elemen yang diinginkan, misal elemen dengan urutan 2 dan 3.\n\n```html\n<style>li:nth-child(2),li:nth-child(3){    background-color: yellow;    color           : red;}</style><h1>Daftar Bekal Piknik</h1><ul>    <li>Nasi</li>    <li>Sate</li>    <li>Sayuran</li>    <li>Minuman</li></ul>\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/ps3.png)\n\n**:nth-child (odd)** dan **:nth-child (even)**\n\nMenentukan style khusus elemen ganjil dan genap.\n\n```html\n<style>li:nth-child(odd){    background-color: yellow;    color   : red;}li:nth-child(even){    background-color: orange;}</style><h1>Daftar Bekal Piknik</h1><ul>    <li>Nasi</li>    <li>Sate</li>    <li>Sayuran</li>    <li>Minuman</li></ul>\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/ps4.png)\n\n**:first-letter**\n\nmenentukan style khusus untuk huruf pertama pada suatu elemen\n\n## Box Shadow\n\nProperti ini digunakan untuk menampilkan efek shadow / bayangan pada box.\n\n**Browser Pendukung:**\n\n| Property                | box-shadow        |\n| ----------------------- | ----------------- |\n| Chrome                  | 10.0 4.0 -webkit- |\n| Internet Explore / Edge | 9.0               |\n| Firefox                 | 4.0 3.5 -moz-     |\n| Safari                  | 5.1 3.1 -webkit-  |\n| Opera                   | 10.5              |\n\n```html\n<style>div{    padding :10px    margin : 10px 20px;    box-shadow: 2px 2px 10px 2px rgba(0,0,0,.3);}</style><div><p>The optional fourth value defines the spread of the shadow</p></div>\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/boxshadow.png)\n\nJika ingin menampilkan efek bayangan ke dalam maka bisa menyisipkan inset.\n\n```html\n<style>div{    padding :10px    margin : 10px 20px;    box-shadow: inset 2px 2px 10px 2px rgba(0,0,0,.3);}</style><div><p>The optional fourth value defines the spread of the shadow</p></div>\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/bs2.png)\n\n## Text Shadow\n\nProperti ini memberikan efek bayangan pada tulisan.\n\n**Browser Pendukung:**\n\n| Property                | text-shadow |\n| ----------------------- | ----------- |\n| Chrome                  | 4.0         |\n| Internet Explore / Edge | 10.0        |\n| Firefox                 | 3.5         |\n| Safari                  | 4.0         |\n| Opera                   | 9.6         |\n\n```html\n<style>h1{    text-shadow: 2px 2px 8px #aaa;    color: white }</style><h1>The text Shadow Property</h1>\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/ts.png)\n\n## Border Radius\n\nProperti ini berfungsi untuk membentuk sudut-sudut dari elemen, misal elemen dengan bentuk awal persegi ingin dijadikan melingkar di sudut-sudutnya.\n\n**Browser Pendukung:**\n\n| Property                | border-radius    |\n| ----------------------- | ---------------- |\n| Chrome                  | 5.0 4.0 -webkit- |\n| Internet Explore / Edge | 9.0              |\n| Firefox                 | 4.0 3.0 -moz-    |\n| Safari                  | 5.0 3.1 -webkit- |\n| Opera                   | 10.5             |\n\n```html\n<html><head><style>#value1 {    border-radius: 20% 10%;    background: #000FFF;    padding: 20px;    width: 200px;    height: 140px;}</style></head><body>    <div id=\"value1\"></div></body></html>\n```\n\n***length\\***\n\nPengisian nilai ini akan menentukan bentuk sudut dari elemen\n\n```\n1 nilai *lenght* border-radius: 25px;\n```\n\nApabila hanya diisi 1 nilai *length*, maka nilai tersebut berlaku untuk keempat sudut.\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/1.png)\n\n```\n2 nilai *lenght*border-radius: 25px 50px;\n```\n\nApabila diisi 2 nilai *length* , maka nilai pertama berlaku untuk sudut kiri atas dan kanan bawah, dan nilai kedua berlaku untuk sudut kanan atas dan kiri bawah.\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/2.png)\n\n```\n3 nilai *lenght*border-radius: 25px 50px 50px;\n```\n\nApabila diisi 3 nilai *length* , Nilai pertama berlaku untuk sudut kiri atas, nilai kedua berlaku untuk sudut kanan atas dan kiri bawah, dan nilai ketiga berlaku untuk sudut kanan bawah\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/3.png)\n\n```\n4 nilai *lenght*border-radius: 25px 50px 50px 25px;\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/4.png)\n\nApabila diisi 4 nilai *length* , nilai pertama berlaku untuk sudut kiri atas, nilai kedua berlaku untuk sudut kanan atas, nilai ketiga berlaku untuk sudut kanan bawah, nilai keempat berlaku untuk sudut kiri bawah.\n\n**%**\n\nPengisian nilai dalam bentuk % , ketentuannya sama seperti pengisian dalam bentuk *length* .\n\n```css\nborder-radius: 20% 10%;\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/5.png)\n\n**initial**\n\n**inherit**\n\n## Gradient Background\n\nAda 2 jenis gradient background :\n\n- linear\n\n- Radial\n\n  ```html\n  <style>  .container div  {      width:130px;      height:130px;      display:inline-block;      margin:2px;  }#el1{background:linear-gradient(to bottom,yellow,red)}#el2{background:radial-gradient(red 5%, yellow 15%, green 60%);}#el3{background:repeating-linear-gradient(red, yellow 10%, green 15%)}#el4{background:repeating-radial-gradient(red,green 5px,white 5px, white 10px)}  </style><div class=\"container\"><div id=\"el1\">Linear</div><div id=\"el2\">Radial</div><div id=\"el3\">Repeating Lin</div><div id=\"el4\">Repeating Rad</div></div>\n  ```\n\n  ![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/gb.png)\n\n## 3D Transform\n\nmemungkinkan untuk mentransformasi 3D, contohnya untuk memberikan efek memutar suatu elemen.\n\nmetode tranformasi 3 D\n\n**rotateX()**\n\nMetode rotateX () digunakan untu memutar elemen di sekitar sumbu X pada derajat tertentu,\n\nmisal diputar 180 derajat\n\n**rotateY()**\n\nMetode rotateY () digunakan untuk memutar elemen di sekitar sumbu Y pada derajat tertentu, misal diputar 180 derajat\n\n**rotateZ()**\n\nMetode rotateZ () digunakan untu memutar elemen di sekitar sumbu Z pada derajat tertentu,\n\nmisal diputar 180 derajat .\n\n```css\n    #Div     {        -webkit-transform: rotateZ(90deg); /* Safari */        transform: rotateZ(90deg);    }\n```\n\nDemikian beberapa fitur-fitur yang disediakan oleh CSS3 semoga mudah dipelajari ya..",
              "type": "markdown"
            }
          ]
        },
        {
          "parts_page": [
            {
              "content": "4SSvrJMe5kE",
              "type": "youtube"
            },
            {
              "content": "# Mengenal Fitur HTML5\n\nHTML5 adalah pengembangan HTML generasi sebelumnya yang menawarkan fitur-fitur baru yang canggih dan lebih efisien dalam penulisan kodenya.\n\nBerikut beberapa perbedaan HTML dan HTML5 beserta fitur baru yang ditawarkan :\n\n## Doctype\n\nDOCTYPE ditulis sebelum tag `<html>` , digunakan untuk memberi instruksi ke web browser tentang versi html yang akan ditulis.\n\n**HTML5**\n\n```html\n<!DOCTYPE html>\n```\n\n**HTML**\n\n```HTML\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n```\n\n## Figure\n\nTag `<figure>` merupakan fitur yang ada di HTML5 . Tag `<figure>` menentukan konten yang berdiri sendiri, seperti ilustrasi, diagram, foto dll.\n\n- elemen `<figcaption>` digunakan untuk menambahkan keterangan pada elemen`<figure>`\n\n  ```html\n  <!DOCTYPE html>\n  <html>\n  <body>\n  <figure>\n    <img src=\"jeruk-1.jpg\" alt=\"The Pulpit Rock\" width=\"304\" height=\"228\">\n      <figcaption>\n        <p>Keterangan penggunaan figcaption</p>\n      </figcaption>\n  </figure>\n  </body>\n  </html>\n  ```\n\n  ![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/jeruk-1.png)\n\n## \"Type\" - Link & Js\n\nDigunakan untuk mengaitkan file javascript pada halaman HTML.\n\nPerbedaan penulisan antara HTML dengan HTML5\n\n**HTML**\n\n```html\n<script src=\"path/scripts.js\" type=\"text/javascript\"></script>\n```\n\n**HTML 5**\n\n```html\n<script src=\"path/cripts.js\"></script>\n```\n\nPada HTML5 tidak perlu ditulis *type=\"text/javascript\"*.\n\n## ID's & Classes\n\nPerbedaan penulisan antara HTML dengan HTML5\n\n**HTML**\n\n```html\n<p class=\"myClass\" id=\"myId\">\n```\n\n**HTML5**\n\n```html\n<p class=myClass id=myId>\n```\n\nPada HTML5 tidak harus menulis tanda petik untuk menyebutkan id dan class, namun apabila class yang digunakan lebih dari 1 maka tetap harus menulis tanda petik.\n\n```html\n<p class=\"myClass pClass\" id=\"myId\">\n```\n\n## UL Editable\n\n**HTML5**\n\nPada HTML5 terdapat penambahan fitur **contenteditable** yang digunakan untuk menentukan apakah konten dapat diedit atau tidak.\n\n```html\n<ul contenteditable=true>  <li>PHP</li>  <li>CSS</li>  <li>Javascript</li></ul>\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/editable.png)\n\n? Pada list tersebut, user dapat melakukan edit list sendiri misalnya menambahkan data baru.\n\n**HTML**\n\nbelum ada fitur **contenteditable**\n\n## Placeholders\n\nAtribut placeholder digunakan untuk memberikan petunjuk atau keterangan pada kolom input dengan tujuan agar user memasukkan nilai data dengan benar.\n\nAtribut placeholder dapat digunakan pada tipe input : text, search, url, tel, email, dan password.\n\nHasil dari penggunaan atribut placeholder ditampilkan pada kolom input .\n\n```html\n<!DOCTYPE html><html><body><form action=\"/action_page.php\">Nama: <input type=\"text\" name=\"nama\" placeholder=\"Donald\"><br><br>Email: <input type=\"email\" name=\"email\" placeholder=\"mail@domain.com\"><br><br><input type=\"submit\" value=\"Submit\"></form></body></html>\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/placeholder.png)\n\n## Required\n\nAtribut required menentukan bahwa suatu kolom input harus diisi sebelum mengirimkan form.\n\nAtribut ini dapat berfungsi pada tipe input : text, search, url, tel, email, password, date pickers, number, checkbox, radio, dan file.\n\n**HTML5**\n\n```html\n<input type=\"text\" name=\"nama\" required><!DOCTYPE html><html><body><form action=\"aksi.php\">  Nama: <input type=\"text\" name=\"nama\" required>  <input type=\"submit\"></form></body></html>\n```\n\nKetika mengirim form tanpa mengisi kolom input, maka akan muncul notifikasi sbb :\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/required.png)\n\n**HTML**\n\nPada HTML belum ada atribut required\n\n## Autofocus\n\nAtribut autofocus menentukan letak fokus utama saat sebuah halaman web dimuat.\n\n**HTML5**\n\nContoh Kita akan menempatkan fokus utama pada kolom input username saat halaman login dimuat.\n\n```html\n<!DOCTYPE html><html><body><form action=\"login.php\">  Username: <input type=\"text\" name=\"username\" autofocus><br><br>  Password: <input type=\"text\" name=\"password\"><br>  <input type=\"submit\"></form></body></html>\n```\n\n![img](https://static.cdn-cdpl.com/courses/basic-html-dan-css/images/autofocus.png)\n\nCursor otomatis fokus pada kolom input username.\n\n**HTML**\n\nPada HTML belum ada atribut autofocus\n\n## Audio\n\nDigunakan untuk menambahkan audio seperti mp3, ogg dsb ke halaman web\n\n**HTML5**\n\nFormat audio yang disupport browser :\n\n| Browser             | MP3  | Wav  | Ogg  |\n| ------------------- | ---- | ---- | ---- |\n| Internet Exploer 9+ | YES  | NO   | NO   |\n| Chrome 6+           | YES  | YES  | YES  |\n| Firefox 3.6+        | NO   | YES  | YES  |\n| Safari 5+           | YES  | YES  | NO   |\n| Opera 10+           | NO   | YES  | YES  |\n\nContoh :\n\n```html\n<!DOCTYPE html><html><body><audio autoplay=\"autoplay\" controls=\"controls\">  <source src=\"file.ogg\">  <source src=\"file.mp3\"></audio></body></html>\n```\n\n**HTML**\n\nPada HTML belum ada atribut audio\n\n## Video\n\nDigunakan untuk menambahkan video ke halaman web\n\n**HTML5**\n\nFormat video yang disupport browser :\n\n| Browser             | MP4  | WebM | Ogg  |\n| ------------------- | ---- | ---- | ---- |\n| Internet Exploer 9+ | YES  | NO   | NO   |\n| Chrome 6+           | YES  | YES  | YES  |\n| Firefox 3.6+        | NO   | YES  | YES  |\n| Safari 5+           | YES  | NO   | NO   |\n| Opera 10.6+         | NO   | YES  | YES  |\n\n```html\n<!DOCTYPE html><html><body><video width=\"320\" height=\"240\" controls preload>  <source src=\"video.mp4\" type=\"video/mp4\">  <source src=\"video.ogg\" type=\"video/ogg\"></video></body></html>\n```\n\n**HTML**\n\nPada HTML belum ada atribut video.\n\n## Data Attributes\n\nData attributes adalah fitur baru di HTML5, maka pada HTML sebelumnya fitur data atrribut belum tersedia.\n\nData attributes digunakan untuk menyimpan kustomasi data secara pribadi.\n\nData yang disimpan (kustomasi) kemudian dapat digunakan di halaman JavaScript untuk menampilkan halaman yang lebih menarik.\n\nsintaks :\n\n```html\n<element data-*=\"somevalue\">\n```\n\ndata-* attributes terdiri dari 2 bagian\n\n**Nama atribut**\n\nTidak boleh berisi huruf besar, dan setidaknya harus memiliki panjang satu karakter setelah awalan \"data-\"\n\n**Nilai atribut**\n\nBisa berupa string apa pun.\n\n```html\n<div id=\"myDiv\" data-custom-attr=\"MyValue\"> Text</div>\n```\n\n## Semantic Tags\n\nSemantic tags mendefinisikan dengan jelas fungsi / makna penggunaan tags tersebut, semantic tags dapat memudahkan developer dan browser memahami konten.\n\n**HTML**\n\nPada HTML belum terdapat semantic tags, biasanya menggunakan tag\n\ndan untuk pembuatan konten.HTML 5Elemen semantic tagsNama ElemenKeterangan<aside>Mendefinisikan konten selain konten utama<article>Mendefinisikan artikel<details>Menentukan detail tambahan yang dapat dilihat atau disembunyikan oleh pengguna<figcaption>Menentukan keterangan untuk elemen<figure>Menentukan konten yang berdiri sendiri, seperti ilustrasi, diagram, foto dll.<footer>Mendefiniskan footer suatu halaman / dokumen<header>Mendefiniskan header suatu halaman / dokumen<main>Menentukan isi utama suatu halaman / dokumen<mark>Menentukan teks yang ditandai / disorot<nav>Menentukan tautan/link navigasi<section>Mendefinisikan bagian dalam dokumen<summary>Menentukan heading yang terlihat untuk elemen <details><time>Menentukan tanggal / waktuContoh penulisan semantic tags:  <nav>     <a href=\"html\">HTML</a> |     <a href=\"css\">CSS</a> |     <a href=\"js\">JavaScript</a> |     <a href=\"jquery\">jQuery</a>   </nav>   <header><p>Codepolitan</p></header>   <article>     <section>     Semantic tags mendefinisikan dengan jelas fungsi / makna penggunaan tags    tersebut, semantic tags dapat memudahkan developer dan browser memahami konten.     </section>   </article>   <aside>     <p>Belajar HTML5</p>   </aside>   <footer>     <p>Posted by: Codepolitan</p>   </footer> Demikian beberapa fitur yang disediakan oleh HTML5 semoga mudah dipahami..",
              "type": "markdown"
            }
          ]
        }
      ]
    }
  ],
  "materials": [
    {
      "id_material": 0,
      "title_material": "Pengenalan HTML dan CSS",
      "thumbnail_material": "https://i.ibb.co/fCDbPcD/news-large-2.png"
    },
    {
      "id_material": 1,
      "title_material": "Dasar HTML dan CSS",
      "thumbnail_material": "https://i.ibb.co/gWhdpxv/news-large-3.png"
    },
    {
      "id_material": 2,
      "title_material": "Membuat Layout Halaman Tanpa Table",
      "thumbnail_material": "https://i.ibb.co/T10WL1h/news-large-4.png"
    },
    {
      "id_material": 3,
      "title_material": "Teknologi HTML dan CSS Terbaru",
      "thumbnail_material": "https://i.ibb.co/x3JhvpT/news-large-5.png"
    }
  ]
}